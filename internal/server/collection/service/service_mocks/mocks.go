// Code generated by MockGen. DO NOT EDIT.
// Source: collection_service.go

// Package service_mocks is a generated GoMock package.
package service_mocks

import (
	context "context"
	reflect "reflect"

	mocks "github.com/go-park-mail-ru/2025_1_sigmaScript/internal/server/mocks"
	gomock "github.com/golang/mock/gomock"
)

// MockCollectionRepositoryInterface is a mock of CollectionRepositoryInterface interface.
type MockCollectionRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCollectionRepositoryInterfaceMockRecorder
}

// MockCollectionRepositoryInterfaceMockRecorder is the mock recorder for MockCollectionRepositoryInterface.
type MockCollectionRepositoryInterfaceMockRecorder struct {
	mock *MockCollectionRepositoryInterface
}

// NewMockCollectionRepositoryInterface creates a new mock instance.
func NewMockCollectionRepositoryInterface(ctrl *gomock.Controller) *MockCollectionRepositoryInterface {
	mock := &MockCollectionRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockCollectionRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCollectionRepositoryInterface) EXPECT() *MockCollectionRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetMainPageCollectionsFromRepo mocks base method.
func (m *MockCollectionRepositoryInterface) GetMainPageCollectionsFromRepo(ctx context.Context) (mocks.Collections, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMainPageCollectionsFromRepo", ctx)
	ret0, _ := ret[0].(mocks.Collections)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMainPageCollectionsFromRepo indicates an expected call of GetMainPageCollectionsFromRepo.
func (mr *MockCollectionRepositoryInterfaceMockRecorder) GetMainPageCollectionsFromRepo(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMainPageCollectionsFromRepo", reflect.TypeOf((*MockCollectionRepositoryInterface)(nil).GetMainPageCollectionsFromRepo), ctx)
}
