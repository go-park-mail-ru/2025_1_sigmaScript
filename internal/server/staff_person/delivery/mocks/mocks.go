// Code generated by MockGen. DO NOT EDIT.
// Source: staff_person_handler.go

// Package delivery_mocks is a generated GoMock package.
package delivery_mocks

import (
	context "context"
	reflect "reflect"

	mocks "github.com/go-park-mail-ru/2025_1_sigmaScript/internal/server/mocks"
	gomock "github.com/golang/mock/gomock"
)

// MockStaffPersonServiceInterface is a mock of StaffPersonServiceInterface interface.
type MockStaffPersonServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStaffPersonServiceInterfaceMockRecorder
}

// MockStaffPersonServiceInterfaceMockRecorder is the mock recorder for MockStaffPersonServiceInterface.
type MockStaffPersonServiceInterfaceMockRecorder struct {
	mock *MockStaffPersonServiceInterface
}

// NewMockStaffPersonServiceInterface creates a new mock instance.
func NewMockStaffPersonServiceInterface(ctrl *gomock.Controller) *MockStaffPersonServiceInterface {
	mock := &MockStaffPersonServiceInterface{ctrl: ctrl}
	mock.recorder = &MockStaffPersonServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStaffPersonServiceInterface) EXPECT() *MockStaffPersonServiceInterfaceMockRecorder {
	return m.recorder
}

// GetPersonByID mocks base method.
func (m *MockStaffPersonServiceInterface) GetPersonByID(ctx context.Context, personID int) (*mocks.PersonJSON, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersonByID", ctx, personID)
	ret0, _ := ret[0].(*mocks.PersonJSON)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPersonByID indicates an expected call of GetPersonByID.
func (mr *MockStaffPersonServiceInterfaceMockRecorder) GetPersonByID(ctx, personID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersonByID", reflect.TypeOf((*MockStaffPersonServiceInterface)(nil).GetPersonByID), ctx, personID)
}
