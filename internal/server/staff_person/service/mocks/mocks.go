// Code generated by MockGen. DO NOT EDIT.
// Source: staff_person_service.go

// Package service_mocks is a generated GoMock package.
package service_mocks

import (
	context "context"
	reflect "reflect"

	mocks "github.com/go-park-mail-ru/2025_1_sigmaScript/internal/server/mocks"
	gomock "github.com/golang/mock/gomock"
)

// MockStaffPersonRepositoryInterface is a mock of StaffPersonRepositoryInterface interface.
type MockStaffPersonRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockStaffPersonRepositoryInterfaceMockRecorder
}

// MockStaffPersonRepositoryInterfaceMockRecorder is the mock recorder for MockStaffPersonRepositoryInterface.
type MockStaffPersonRepositoryInterfaceMockRecorder struct {
	mock *MockStaffPersonRepositoryInterface
}

// NewMockStaffPersonRepositoryInterface creates a new mock instance.
func NewMockStaffPersonRepositoryInterface(ctrl *gomock.Controller) *MockStaffPersonRepositoryInterface {
	mock := &MockStaffPersonRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockStaffPersonRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStaffPersonRepositoryInterface) EXPECT() *MockStaffPersonRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetPersonFromRepoByID mocks base method.
func (m *MockStaffPersonRepositoryInterface) GetPersonFromRepoByID(ctx context.Context, personID int) (*mocks.PersonJSON, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersonFromRepoByID", ctx, personID)
	ret0, _ := ret[0].(*mocks.PersonJSON)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPersonFromRepoByID indicates an expected call of GetPersonFromRepoByID.
func (mr *MockStaffPersonRepositoryInterfaceMockRecorder) GetPersonFromRepoByID(ctx, personID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersonFromRepoByID", reflect.TypeOf((*MockStaffPersonRepositoryInterface)(nil).GetPersonFromRepoByID), ctx, personID)
}
