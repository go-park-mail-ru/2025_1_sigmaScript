// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_http is a generated GoMock package.
package mock_http

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserHandlerInterface is a mock of UserHandlerInterface interface.
type MockUserHandlerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserHandlerInterfaceMockRecorder
}

// MockUserHandlerInterfaceMockRecorder is the mock recorder for MockUserHandlerInterface.
type MockUserHandlerInterfaceMockRecorder struct {
	mock *MockUserHandlerInterface
}

// NewMockUserHandlerInterface creates a new mock instance.
func NewMockUserHandlerInterface(ctrl *gomock.Controller) *MockUserHandlerInterface {
	mock := &MockUserHandlerInterface{ctrl: ctrl}
	mock.recorder = &MockUserHandlerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserHandlerInterface) EXPECT() *MockUserHandlerInterfaceMockRecorder {
	return m.recorder
}

// AddFavoriteActor mocks base method.
func (m *MockUserHandlerInterface) AddFavoriteActor(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddFavoriteActor", w, r)
}

// AddFavoriteActor indicates an expected call of AddFavoriteActor.
func (mr *MockUserHandlerInterfaceMockRecorder) AddFavoriteActor(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddFavoriteActor", reflect.TypeOf((*MockUserHandlerInterface)(nil).AddFavoriteActor), w, r)
}

// AddFavoriteMovie mocks base method.
func (m *MockUserHandlerInterface) AddFavoriteMovie(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddFavoriteMovie", w, r)
}

// AddFavoriteMovie indicates an expected call of AddFavoriteMovie.
func (mr *MockUserHandlerInterfaceMockRecorder) AddFavoriteMovie(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddFavoriteMovie", reflect.TypeOf((*MockUserHandlerInterface)(nil).AddFavoriteMovie), w, r)
}

// GetProfile mocks base method.
func (m *MockUserHandlerInterface) GetProfile(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetProfile", w, r)
}

// GetProfile indicates an expected call of GetProfile.
func (mr *MockUserHandlerInterfaceMockRecorder) GetProfile(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockUserHandlerInterface)(nil).GetProfile), w, r)
}

// UpdateUser mocks base method.
func (m *MockUserHandlerInterface) UpdateUser(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateUser", w, r)
}

// UpdateUser indicates an expected call of UpdateUser.
func (mr *MockUserHandlerInterfaceMockRecorder) UpdateUser(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUser", reflect.TypeOf((*MockUserHandlerInterface)(nil).UpdateUser), w, r)
}

// UpdateUserAvatar mocks base method.
func (m *MockUserHandlerInterface) UpdateUserAvatar(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateUserAvatar", w, r)
}

// UpdateUserAvatar indicates an expected call of UpdateUserAvatar.
func (mr *MockUserHandlerInterfaceMockRecorder) UpdateUserAvatar(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUserAvatar", reflect.TypeOf((*MockUserHandlerInterface)(nil).UpdateUserAvatar), w, r)
}
