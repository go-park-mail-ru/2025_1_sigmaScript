// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.6
// source: proto/movie.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MovieJSON struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OriginalName    string               `protobuf:"bytes,3,opt,name=original_name,json=originalName,proto3" json:"original_name,omitempty"`
	About           string               `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	Poster          string               `protobuf:"bytes,5,opt,name=poster,proto3" json:"poster,omitempty"`
	PromoUrl        string               `protobuf:"bytes,6,opt,name=promo_url,json=promoUrl,proto3" json:"promo_url,omitempty"`
	ReleaseYear     string               `protobuf:"bytes,7,opt,name=release_year,json=releaseYear,proto3" json:"release_year,omitempty"`
	Country         string               `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`
	Slogan          string               `protobuf:"bytes,9,opt,name=slogan,proto3" json:"slogan,omitempty"`
	Director        string               `protobuf:"bytes,10,opt,name=director,proto3" json:"director,omitempty"`
	Budget          int64                `protobuf:"varint,11,opt,name=budget,proto3" json:"budget,omitempty"`
	BoxOfficeUs     int64                `protobuf:"varint,12,opt,name=box_office_us,json=boxOfficeUs,proto3" json:"box_office_us,omitempty"`
	BoxOfficeGlobal int64                `protobuf:"varint,13,opt,name=box_office_global,json=boxOfficeGlobal,proto3" json:"box_office_global,omitempty"`
	BoxOfficeRussia int64                `protobuf:"varint,14,opt,name=box_office_russia,json=boxOfficeRussia,proto3" json:"box_office_russia,omitempty"`
	PremierRussia   string               `protobuf:"bytes,15,opt,name=premier_russia,json=premierRussia,proto3" json:"premier_russia,omitempty"`
	PremierGlobal   string               `protobuf:"bytes,16,opt,name=premier_global,json=premierGlobal,proto3" json:"premier_global,omitempty"`
	Rating          float64              `protobuf:"fixed64,17,opt,name=rating,proto3" json:"rating,omitempty"`
	Duration        string               `protobuf:"bytes,18,opt,name=duration,proto3" json:"duration,omitempty"`
	Genres          string               `protobuf:"bytes,19,opt,name=genres,proto3" json:"genres,omitempty"`
	Staff           []*PersonJSON        `protobuf:"bytes,20,rep,name=staff,proto3" json:"staff,omitempty"`
	Reviews         []*ReviewJSON        `protobuf:"bytes,21,rep,name=reviews,proto3" json:"reviews,omitempty"`
	RatingKp        float64              `protobuf:"fixed64,22,opt,name=rating_kp,json=ratingKp,proto3" json:"rating_kp,omitempty"`
	RatingImdb      float64              `protobuf:"fixed64,23,opt,name=rating_imdb,json=ratingImdb,proto3" json:"rating_imdb,omitempty"`
	Watchability    []*WatchProviderJSON `protobuf:"bytes,24,rep,name=watchability,proto3" json:"watchability,omitempty"`
	Logo            string               `protobuf:"bytes,25,opt,name=logo,proto3" json:"logo,omitempty"`
	Backdrop        string               `protobuf:"bytes,26,opt,name=backdrop,proto3" json:"backdrop,omitempty"`
}

func (x *MovieJSON) Reset() {
	*x = MovieJSON{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieJSON) ProtoMessage() {}

func (x *MovieJSON) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieJSON.ProtoReflect.Descriptor instead.
func (*MovieJSON) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{0}
}

func (x *MovieJSON) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MovieJSON) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MovieJSON) GetOriginalName() string {
	if x != nil {
		return x.OriginalName
	}
	return ""
}

func (x *MovieJSON) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *MovieJSON) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *MovieJSON) GetPromoUrl() string {
	if x != nil {
		return x.PromoUrl
	}
	return ""
}

func (x *MovieJSON) GetReleaseYear() string {
	if x != nil {
		return x.ReleaseYear
	}
	return ""
}

func (x *MovieJSON) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *MovieJSON) GetSlogan() string {
	if x != nil {
		return x.Slogan
	}
	return ""
}

func (x *MovieJSON) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *MovieJSON) GetBudget() int64 {
	if x != nil {
		return x.Budget
	}
	return 0
}

func (x *MovieJSON) GetBoxOfficeUs() int64 {
	if x != nil {
		return x.BoxOfficeUs
	}
	return 0
}

func (x *MovieJSON) GetBoxOfficeGlobal() int64 {
	if x != nil {
		return x.BoxOfficeGlobal
	}
	return 0
}

func (x *MovieJSON) GetBoxOfficeRussia() int64 {
	if x != nil {
		return x.BoxOfficeRussia
	}
	return 0
}

func (x *MovieJSON) GetPremierRussia() string {
	if x != nil {
		return x.PremierRussia
	}
	return ""
}

func (x *MovieJSON) GetPremierGlobal() string {
	if x != nil {
		return x.PremierGlobal
	}
	return ""
}

func (x *MovieJSON) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *MovieJSON) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *MovieJSON) GetGenres() string {
	if x != nil {
		return x.Genres
	}
	return ""
}

func (x *MovieJSON) GetStaff() []*PersonJSON {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *MovieJSON) GetReviews() []*ReviewJSON {
	if x != nil {
		return x.Reviews
	}
	return nil
}

func (x *MovieJSON) GetRatingKp() float64 {
	if x != nil {
		return x.RatingKp
	}
	return 0
}

func (x *MovieJSON) GetRatingImdb() float64 {
	if x != nil {
		return x.RatingImdb
	}
	return 0
}

func (x *MovieJSON) GetWatchability() []*WatchProviderJSON {
	if x != nil {
		return x.Watchability
	}
	return nil
}

func (x *MovieJSON) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *MovieJSON) GetBackdrop() string {
	if x != nil {
		return x.Backdrop
	}
	return ""
}

type PersonJSON struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName        string               `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	EnFullName      string               `protobuf:"bytes,3,opt,name=en_full_name,json=enFullName,proto3" json:"en_full_name,omitempty"`
	Photo           string               `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	About           string               `protobuf:"bytes,5,opt,name=about,proto3" json:"about,omitempty"`
	Sex             string               `protobuf:"bytes,6,opt,name=sex,proto3" json:"sex,omitempty"`
	Growth          string               `protobuf:"bytes,7,opt,name=growth,proto3" json:"growth,omitempty"`
	Birthday        string               `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Death           string               `protobuf:"bytes,9,opt,name=death,proto3" json:"death,omitempty"`
	Career          string               `protobuf:"bytes,10,opt,name=career,proto3" json:"career,omitempty"`
	Genres          string               `protobuf:"bytes,11,opt,name=genres,proto3" json:"genres,omitempty"`
	TotalFilms      string               `protobuf:"bytes,12,opt,name=total_films,json=totalFilms,proto3" json:"total_films,omitempty"`
	MovieCollection map[int32]*MovieJSON `protobuf:"bytes,13,rep,name=movie_collection,json=movieCollection,proto3" json:"movie_collection,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PersonJSON) Reset() {
	*x = PersonJSON{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonJSON) ProtoMessage() {}

func (x *PersonJSON) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonJSON.ProtoReflect.Descriptor instead.
func (*PersonJSON) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{1}
}

func (x *PersonJSON) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PersonJSON) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *PersonJSON) GetEnFullName() string {
	if x != nil {
		return x.EnFullName
	}
	return ""
}

func (x *PersonJSON) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *PersonJSON) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *PersonJSON) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *PersonJSON) GetGrowth() string {
	if x != nil {
		return x.Growth
	}
	return ""
}

func (x *PersonJSON) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *PersonJSON) GetDeath() string {
	if x != nil {
		return x.Death
	}
	return ""
}

func (x *PersonJSON) GetCareer() string {
	if x != nil {
		return x.Career
	}
	return ""
}

func (x *PersonJSON) GetGenres() string {
	if x != nil {
		return x.Genres
	}
	return ""
}

func (x *PersonJSON) GetTotalFilms() string {
	if x != nil {
		return x.TotalFilms
	}
	return ""
}

func (x *PersonJSON) GetMovieCollection() map[int32]*MovieJSON {
	if x != nil {
		return x.MovieCollection
	}
	return nil
}

type ReviewUserDataJSON struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login  string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Avatar string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *ReviewUserDataJSON) Reset() {
	*x = ReviewUserDataJSON{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewUserDataJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewUserDataJSON) ProtoMessage() {}

func (x *ReviewUserDataJSON) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewUserDataJSON.ProtoReflect.Descriptor instead.
func (*ReviewUserDataJSON) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{2}
}

func (x *ReviewUserDataJSON) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *ReviewUserDataJSON) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type ReviewJSON struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	User       *ReviewUserDataJSON `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	ReviewText string              `protobuf:"bytes,3,opt,name=review_text,json=reviewText,proto3" json:"review_text,omitempty"`
	Score      float64             `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	CreatedAt  string              `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ReviewJSON) Reset() {
	*x = ReviewJSON{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewJSON) ProtoMessage() {}

func (x *ReviewJSON) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewJSON.ProtoReflect.Descriptor instead.
func (*ReviewJSON) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{3}
}

func (x *ReviewJSON) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReviewJSON) GetUser() *ReviewUserDataJSON {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ReviewJSON) GetReviewText() string {
	if x != nil {
		return x.ReviewText
	}
	return ""
}

func (x *ReviewJSON) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ReviewJSON) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type NewReviewDataJSON struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewText string  `protobuf:"bytes,1,opt,name=review_text,json=reviewText,proto3" json:"review_text,omitempty"`
	Score      float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *NewReviewDataJSON) Reset() {
	*x = NewReviewDataJSON{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewReviewDataJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewReviewDataJSON) ProtoMessage() {}

func (x *NewReviewDataJSON) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewReviewDataJSON.ProtoReflect.Descriptor instead.
func (*NewReviewDataJSON) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{4}
}

func (x *NewReviewDataJSON) GetReviewText() string {
	if x != nil {
		return x.ReviewText
	}
	return ""
}

func (x *NewReviewDataJSON) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type WatchProviderJSON struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *WatchProviderJSON) Reset() {
	*x = WatchProviderJSON{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchProviderJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchProviderJSON) ProtoMessage() {}

func (x *WatchProviderJSON) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchProviderJSON.ProtoReflect.Descriptor instead.
func (*WatchProviderJSON) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{5}
}

func (x *WatchProviderJSON) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WatchProviderJSON) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Movies []*MovieJSON `protobuf:"bytes,3,rep,name=movies,proto3" json:"movies,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{6}
}

func (x *Genre) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Genre) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Genre) GetMovies() []*MovieJSON {
	if x != nil {
		return x.Movies
	}
	return nil
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Movies []*MovieJSON `protobuf:"bytes,2,rep,name=movies,proto3" json:"movies,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{7}
}

func (x *Collection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collection) GetMovies() []*MovieJSON {
	if x != nil {
		return x.Movies
	}
	return nil
}

type GetMovieByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId int32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *GetMovieByIDRequest) Reset() {
	*x = GetMovieByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieByIDRequest) ProtoMessage() {}

func (x *GetMovieByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieByIDRequest.ProtoReflect.Descriptor instead.
func (*GetMovieByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{8}
}

func (x *GetMovieByIDRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type GetMovieByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movie *MovieJSON `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
}

func (x *GetMovieByIDResponse) Reset() {
	*x = GetMovieByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieByIDResponse) ProtoMessage() {}

func (x *GetMovieByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieByIDResponse.ProtoReflect.Descriptor instead.
func (*GetMovieByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{9}
}

func (x *GetMovieByIDResponse) GetMovie() *MovieJSON {
	if x != nil {
		return x.Movie
	}
	return nil
}

type GetAllReviewsOfMovieByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId int32 `protobuf:"varint,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
}

func (x *GetAllReviewsOfMovieByIDRequest) Reset() {
	*x = GetAllReviewsOfMovieByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReviewsOfMovieByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReviewsOfMovieByIDRequest) ProtoMessage() {}

func (x *GetAllReviewsOfMovieByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReviewsOfMovieByIDRequest.ProtoReflect.Descriptor instead.
func (*GetAllReviewsOfMovieByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllReviewsOfMovieByIDRequest) GetMovieId() int32 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type GetAllReviewsOfMovieByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reviews []*ReviewJSON `protobuf:"bytes,1,rep,name=reviews,proto3" json:"reviews,omitempty"`
}

func (x *GetAllReviewsOfMovieByIDResponse) Reset() {
	*x = GetAllReviewsOfMovieByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReviewsOfMovieByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReviewsOfMovieByIDResponse) ProtoMessage() {}

func (x *GetAllReviewsOfMovieByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReviewsOfMovieByIDResponse.ProtoReflect.Descriptor instead.
func (*GetAllReviewsOfMovieByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{11}
}

func (x *GetAllReviewsOfMovieByIDResponse) GetReviews() []*ReviewJSON {
	if x != nil {
		return x.Reviews
	}
	return nil
}

type CreateNewMovieReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string             `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MovieId   string             `protobuf:"bytes,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	NewReview *NewReviewDataJSON `protobuf:"bytes,3,opt,name=new_review,json=newReview,proto3" json:"new_review,omitempty"`
}

func (x *CreateNewMovieReviewRequest) Reset() {
	*x = CreateNewMovieReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewMovieReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewMovieReviewRequest) ProtoMessage() {}

func (x *CreateNewMovieReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewMovieReviewRequest.ProtoReflect.Descriptor instead.
func (*CreateNewMovieReviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{12}
}

func (x *CreateNewMovieReviewRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateNewMovieReviewRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *CreateNewMovieReviewRequest) GetNewReview() *NewReviewDataJSON {
	if x != nil {
		return x.NewReview
	}
	return nil
}

type CreateNewMovieReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review *NewReviewDataJSON `protobuf:"bytes,1,opt,name=review,proto3" json:"review,omitempty"`
}

func (x *CreateNewMovieReviewResponse) Reset() {
	*x = CreateNewMovieReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewMovieReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewMovieReviewResponse) ProtoMessage() {}

func (x *CreateNewMovieReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewMovieReviewResponse.ProtoReflect.Descriptor instead.
func (*CreateNewMovieReviewResponse) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{13}
}

func (x *CreateNewMovieReviewResponse) GetReview() *NewReviewDataJSON {
	if x != nil {
		return x.Review
	}
	return nil
}

type UpdateMovieReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string             `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MovieId   string             `protobuf:"bytes,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	NewReview *NewReviewDataJSON `protobuf:"bytes,3,opt,name=new_review,json=newReview,proto3" json:"new_review,omitempty"`
}

func (x *UpdateMovieReviewRequest) Reset() {
	*x = UpdateMovieReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieReviewRequest) ProtoMessage() {}

func (x *UpdateMovieReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieReviewRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovieReviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateMovieReviewRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateMovieReviewRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *UpdateMovieReviewRequest) GetNewReview() *NewReviewDataJSON {
	if x != nil {
		return x.NewReview
	}
	return nil
}

type UpdateMovieReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review *NewReviewDataJSON `protobuf:"bytes,1,opt,name=review,proto3" json:"review,omitempty"`
}

func (x *UpdateMovieReviewResponse) Reset() {
	*x = UpdateMovieReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovieReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieReviewResponse) ProtoMessage() {}

func (x *UpdateMovieReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieReviewResponse.ProtoReflect.Descriptor instead.
func (*UpdateMovieReviewResponse) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateMovieReviewResponse) GetReview() *NewReviewDataJSON {
	if x != nil {
		return x.Review
	}
	return nil
}

type GetPersonByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonId int32 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
}

func (x *GetPersonByIDRequest) Reset() {
	*x = GetPersonByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByIDRequest) ProtoMessage() {}

func (x *GetPersonByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPersonByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{16}
}

func (x *GetPersonByIDRequest) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

type GetPersonByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Person *PersonJSON `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
}

func (x *GetPersonByIDResponse) Reset() {
	*x = GetPersonByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByIDResponse) ProtoMessage() {}

func (x *GetPersonByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByIDResponse.ProtoReflect.Descriptor instead.
func (*GetPersonByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{17}
}

func (x *GetPersonByIDResponse) GetPerson() *PersonJSON {
	if x != nil {
		return x.Person
	}
	return nil
}

type GetGenreByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenreId string `protobuf:"bytes,1,opt,name=genre_id,json=genreId,proto3" json:"genre_id,omitempty"`
}

func (x *GetGenreByIDRequest) Reset() {
	*x = GetGenreByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGenreByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenreByIDRequest) ProtoMessage() {}

func (x *GetGenreByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenreByIDRequest.ProtoReflect.Descriptor instead.
func (*GetGenreByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{18}
}

func (x *GetGenreByIDRequest) GetGenreId() string {
	if x != nil {
		return x.GenreId
	}
	return ""
}

type GetGenreByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Genre *Genre `protobuf:"bytes,1,opt,name=genre,proto3" json:"genre,omitempty"`
}

func (x *GetGenreByIDResponse) Reset() {
	*x = GetGenreByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGenreByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenreByIDResponse) ProtoMessage() {}

func (x *GetGenreByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenreByIDResponse.ProtoReflect.Descriptor instead.
func (*GetGenreByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{19}
}

func (x *GetGenreByIDResponse) GetGenre() *Genre {
	if x != nil {
		return x.Genre
	}
	return nil
}

type GetAllGenresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllGenresRequest) Reset() {
	*x = GetAllGenresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGenresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGenresRequest) ProtoMessage() {}

func (x *GetAllGenresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGenresRequest.ProtoReflect.Descriptor instead.
func (*GetAllGenresRequest) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{20}
}

type GetAllGenresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Genres []*Genre `protobuf:"bytes,1,rep,name=genres,proto3" json:"genres,omitempty"`
}

func (x *GetAllGenresResponse) Reset() {
	*x = GetAllGenresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGenresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGenresResponse) ProtoMessage() {}

func (x *GetAllGenresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGenresResponse.ProtoReflect.Descriptor instead.
func (*GetAllGenresResponse) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{21}
}

func (x *GetAllGenresResponse) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

type SearchActorsAndMoviesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchActorsAndMoviesRequest) Reset() {
	*x = SearchActorsAndMoviesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchActorsAndMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchActorsAndMoviesRequest) ProtoMessage() {}

func (x *SearchActorsAndMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchActorsAndMoviesRequest.ProtoReflect.Descriptor instead.
func (*SearchActorsAndMoviesRequest) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{22}
}

func (x *SearchActorsAndMoviesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchActorsAndMoviesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*MovieJSON  `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
	Actors []*PersonJSON `protobuf:"bytes,2,rep,name=actors,proto3" json:"actors,omitempty"`
}

func (x *SearchActorsAndMoviesResponse) Reset() {
	*x = SearchActorsAndMoviesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchActorsAndMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchActorsAndMoviesResponse) ProtoMessage() {}

func (x *SearchActorsAndMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchActorsAndMoviesResponse.ProtoReflect.Descriptor instead.
func (*SearchActorsAndMoviesResponse) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{23}
}

func (x *SearchActorsAndMoviesResponse) GetMovies() []*MovieJSON {
	if x != nil {
		return x.Movies
	}
	return nil
}

func (x *SearchActorsAndMoviesResponse) GetActors() []*PersonJSON {
	if x != nil {
		return x.Actors
	}
	return nil
}

type GetMainPageCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMainPageCollectionsRequest) Reset() {
	*x = GetMainPageCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainPageCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainPageCollectionsRequest) ProtoMessage() {}

func (x *GetMainPageCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainPageCollectionsRequest.ProtoReflect.Descriptor instead.
func (*GetMainPageCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{24}
}

type GetMainPageCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *GetMainPageCollectionsResponse) Reset() {
	*x = GetMainPageCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_movie_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMainPageCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMainPageCollectionsResponse) ProtoMessage() {}

func (x *GetMainPageCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_movie_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMainPageCollectionsResponse.ProtoReflect.Descriptor instead.
func (*GetMainPageCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_movie_proto_rawDescGZIP(), []int{25}
}

func (x *GetMainPageCollectionsResponse) GetCollections() []*Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

var File_proto_movie_proto protoreflect.FileDescriptor

var file_proto_movie_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x22, 0xd5, 0x06, 0x0a, 0x09, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4a, 0x53, 0x4f, 0x4e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x62, 0x6f, 0x75,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x67, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6c, 0x6f, 0x67, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x62, 0x6f, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6f, 0x78, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x55, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x62, 0x6f, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x5f, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x62, 0x6f, 0x78,
	0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11,
	0x62, 0x6f, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x75, 0x73, 0x73, 0x69,
	0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x62, 0x6f, 0x78, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x52, 0x75, 0x73, 0x73, 0x69, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x6d,
	0x69, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x73, 0x73, 0x69, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x52, 0x75, 0x73, 0x73, 0x69, 0x61, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x15, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x07, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6b, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4b, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6d,
	0x64, 0x62, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x49, 0x6d, 0x64, 0x62, 0x12, 0x43, 0x0a, 0x0c, 0x77, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x0c, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67,
	0x6f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x22, 0xeb, 0x03, 0x0a, 0x0a, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6e, 0x5f, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x46,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x62,
	0x6f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x61,
	0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x61, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x73,
	0x12, 0x58, 0x0a, 0x10, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x4a, 0x53, 0x4f, 0x4e, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x5b, 0x0a, 0x14, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x42, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x0a,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4a, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x39, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5c, 0x0a,
	0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4a,
	0x53, 0x4f, 0x4e, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x0a, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x22, 0x30,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64,
	0x22, 0x45, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4a, 0x53, 0x4f, 0x4e,
	0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x22, 0x3c, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0x91, 0x01,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x22, 0x57, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x53,
	0x4f, 0x4e, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x8e, 0x01, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x6e,
	0x65, 0x77, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e,
	0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x53, 0x4f, 0x4e,
	0x52, 0x09, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x54, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52,
	0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x73, 0x22, 0x34, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x82, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4a,
	0x53, 0x4f, 0x4e, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x1f, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xa0, 0x07, 0x0a,
	0x08, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x50, 0x43, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2d, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x26, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x73, 0x12, 0x2a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x41, 0x6e, 0x64,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_movie_proto_rawDescOnce sync.Once
	file_proto_movie_proto_rawDescData = file_proto_movie_proto_rawDesc
)

func file_proto_movie_proto_rawDescGZIP() []byte {
	file_proto_movie_proto_rawDescOnce.Do(func() {
		file_proto_movie_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_movie_proto_rawDescData)
	})
	return file_proto_movie_proto_rawDescData
}

var file_proto_movie_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_proto_movie_proto_goTypes = []interface{}{
	(*MovieJSON)(nil),                        // 0: movieservice.MovieJSON
	(*PersonJSON)(nil),                       // 1: movieservice.PersonJSON
	(*ReviewUserDataJSON)(nil),               // 2: movieservice.ReviewUserDataJSON
	(*ReviewJSON)(nil),                       // 3: movieservice.ReviewJSON
	(*NewReviewDataJSON)(nil),                // 4: movieservice.NewReviewDataJSON
	(*WatchProviderJSON)(nil),                // 5: movieservice.WatchProviderJSON
	(*Genre)(nil),                            // 6: movieservice.Genre
	(*Collection)(nil),                       // 7: movieservice.Collection
	(*GetMovieByIDRequest)(nil),              // 8: movieservice.GetMovieByIDRequest
	(*GetMovieByIDResponse)(nil),             // 9: movieservice.GetMovieByIDResponse
	(*GetAllReviewsOfMovieByIDRequest)(nil),  // 10: movieservice.GetAllReviewsOfMovieByIDRequest
	(*GetAllReviewsOfMovieByIDResponse)(nil), // 11: movieservice.GetAllReviewsOfMovieByIDResponse
	(*CreateNewMovieReviewRequest)(nil),      // 12: movieservice.CreateNewMovieReviewRequest
	(*CreateNewMovieReviewResponse)(nil),     // 13: movieservice.CreateNewMovieReviewResponse
	(*UpdateMovieReviewRequest)(nil),         // 14: movieservice.UpdateMovieReviewRequest
	(*UpdateMovieReviewResponse)(nil),        // 15: movieservice.UpdateMovieReviewResponse
	(*GetPersonByIDRequest)(nil),             // 16: movieservice.GetPersonByIDRequest
	(*GetPersonByIDResponse)(nil),            // 17: movieservice.GetPersonByIDResponse
	(*GetGenreByIDRequest)(nil),              // 18: movieservice.GetGenreByIDRequest
	(*GetGenreByIDResponse)(nil),             // 19: movieservice.GetGenreByIDResponse
	(*GetAllGenresRequest)(nil),              // 20: movieservice.GetAllGenresRequest
	(*GetAllGenresResponse)(nil),             // 21: movieservice.GetAllGenresResponse
	(*SearchActorsAndMoviesRequest)(nil),     // 22: movieservice.SearchActorsAndMoviesRequest
	(*SearchActorsAndMoviesResponse)(nil),    // 23: movieservice.SearchActorsAndMoviesResponse
	(*GetMainPageCollectionsRequest)(nil),    // 24: movieservice.GetMainPageCollectionsRequest
	(*GetMainPageCollectionsResponse)(nil),   // 25: movieservice.GetMainPageCollectionsResponse
	nil,                                      // 26: movieservice.PersonJSON.MovieCollectionEntry
}
var file_proto_movie_proto_depIdxs = []int32{
	1,  // 0: movieservice.MovieJSON.staff:type_name -> movieservice.PersonJSON
	3,  // 1: movieservice.MovieJSON.reviews:type_name -> movieservice.ReviewJSON
	5,  // 2: movieservice.MovieJSON.watchability:type_name -> movieservice.WatchProviderJSON
	26, // 3: movieservice.PersonJSON.movie_collection:type_name -> movieservice.PersonJSON.MovieCollectionEntry
	2,  // 4: movieservice.ReviewJSON.user:type_name -> movieservice.ReviewUserDataJSON
	0,  // 5: movieservice.Genre.movies:type_name -> movieservice.MovieJSON
	0,  // 6: movieservice.Collection.movies:type_name -> movieservice.MovieJSON
	0,  // 7: movieservice.GetMovieByIDResponse.movie:type_name -> movieservice.MovieJSON
	3,  // 8: movieservice.GetAllReviewsOfMovieByIDResponse.reviews:type_name -> movieservice.ReviewJSON
	4,  // 9: movieservice.CreateNewMovieReviewRequest.new_review:type_name -> movieservice.NewReviewDataJSON
	4,  // 10: movieservice.CreateNewMovieReviewResponse.review:type_name -> movieservice.NewReviewDataJSON
	4,  // 11: movieservice.UpdateMovieReviewRequest.new_review:type_name -> movieservice.NewReviewDataJSON
	4,  // 12: movieservice.UpdateMovieReviewResponse.review:type_name -> movieservice.NewReviewDataJSON
	1,  // 13: movieservice.GetPersonByIDResponse.person:type_name -> movieservice.PersonJSON
	6,  // 14: movieservice.GetGenreByIDResponse.genre:type_name -> movieservice.Genre
	6,  // 15: movieservice.GetAllGenresResponse.genres:type_name -> movieservice.Genre
	0,  // 16: movieservice.SearchActorsAndMoviesResponse.movies:type_name -> movieservice.MovieJSON
	1,  // 17: movieservice.SearchActorsAndMoviesResponse.actors:type_name -> movieservice.PersonJSON
	7,  // 18: movieservice.GetMainPageCollectionsResponse.collections:type_name -> movieservice.Collection
	0,  // 19: movieservice.PersonJSON.MovieCollectionEntry.value:type_name -> movieservice.MovieJSON
	8,  // 20: movieservice.MovieRPC.GetMovieByID:input_type -> movieservice.GetMovieByIDRequest
	10, // 21: movieservice.MovieRPC.GetAllReviewsOfMovieByID:input_type -> movieservice.GetAllReviewsOfMovieByIDRequest
	12, // 22: movieservice.MovieRPC.CreateNewMovieReview:input_type -> movieservice.CreateNewMovieReviewRequest
	14, // 23: movieservice.MovieRPC.UpdateMovieReview:input_type -> movieservice.UpdateMovieReviewRequest
	16, // 24: movieservice.MovieRPC.GetPersonByID:input_type -> movieservice.GetPersonByIDRequest
	18, // 25: movieservice.MovieRPC.GetGenreByID:input_type -> movieservice.GetGenreByIDRequest
	20, // 26: movieservice.MovieRPC.GetAllGenres:input_type -> movieservice.GetAllGenresRequest
	22, // 27: movieservice.MovieRPC.SearchActorsAndMovies:input_type -> movieservice.SearchActorsAndMoviesRequest
	24, // 28: movieservice.MovieRPC.GetMainPageCollections:input_type -> movieservice.GetMainPageCollectionsRequest
	9,  // 29: movieservice.MovieRPC.GetMovieByID:output_type -> movieservice.GetMovieByIDResponse
	11, // 30: movieservice.MovieRPC.GetAllReviewsOfMovieByID:output_type -> movieservice.GetAllReviewsOfMovieByIDResponse
	13, // 31: movieservice.MovieRPC.CreateNewMovieReview:output_type -> movieservice.CreateNewMovieReviewResponse
	15, // 32: movieservice.MovieRPC.UpdateMovieReview:output_type -> movieservice.UpdateMovieReviewResponse
	17, // 33: movieservice.MovieRPC.GetPersonByID:output_type -> movieservice.GetPersonByIDResponse
	19, // 34: movieservice.MovieRPC.GetGenreByID:output_type -> movieservice.GetGenreByIDResponse
	21, // 35: movieservice.MovieRPC.GetAllGenres:output_type -> movieservice.GetAllGenresResponse
	23, // 36: movieservice.MovieRPC.SearchActorsAndMovies:output_type -> movieservice.SearchActorsAndMoviesResponse
	25, // 37: movieservice.MovieRPC.GetMainPageCollections:output_type -> movieservice.GetMainPageCollectionsResponse
	29, // [29:38] is the sub-list for method output_type
	20, // [20:29] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_movie_proto_init() }
func file_proto_movie_proto_init() {
	if File_proto_movie_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_movie_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieJSON); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonJSON); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewUserDataJSON); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewJSON); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewReviewDataJSON); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchProviderJSON); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovieByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovieByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReviewsOfMovieByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReviewsOfMovieByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewMovieReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewMovieReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMovieReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMovieReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGenreByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGenreByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGenresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGenresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchActorsAndMoviesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchActorsAndMoviesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainPageCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_movie_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMainPageCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_movie_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_movie_proto_goTypes,
		DependencyIndexes: file_proto_movie_proto_depIdxs,
		MessageInfos:      file_proto_movie_proto_msgTypes,
	}.Build()
	File_proto_movie_proto = out.File
	file_proto_movie_proto_rawDesc = nil
	file_proto_movie_proto_goTypes = nil
	file_proto_movie_proto_depIdxs = nil
}
